// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/dashboard" | "/admin/migrate" | "/app/billing" | "/app/cells" | "/app/courses" | "/app/dashboard" | "/app/events" | "/app/export" | "/app/members" | "/app/reports" | "/app/settings" | "/auth/login" | "/auth/signup" | "/marketing" | "/onboarding" | "/test"
type AppRouteHandlerRoutes = "/api/backup" | "/api/billing/create-checkout-session" | "/api/billing/webhook" | "/api/export" | "/api/migrate" | "/api/notifications" | "/auth/logout"
type PageRoutes = "/Auth" | "/CellManagement" | "/CellReports" | "/ChurchManagement" | "/ChurchManagementNew" | "/Dashboard" | "/DiscipuladorManagement" | "/Index" | "/LeaderManagement" | "/NetworkReports" | "/NotFound" | "/Profile" | "/Settings" | "/Statistics" | "/StatisticsNew" | "/cursos/CourseAdmin" | "/cursos/Courses" | "/cursos/CoursesAdmin" | "/cursos/CoursesDiscipulador" | "/cursos/CoursesLeader" | "/eventos/Events" | "/eventos/EventsAdmin" | "/eventos/EventsDiscipulador" | "/eventos/EventsLeader"
type LayoutRoutes = "/" | "/app"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/dashboard": {}
  "/admin/migrate": {}
  "/api/backup": {}
  "/api/billing/create-checkout-session": {}
  "/api/billing/webhook": {}
  "/api/export": {}
  "/api/migrate": {}
  "/api/notifications": {}
  "/app": {}
  "/app/billing": {}
  "/app/cells": {}
  "/app/courses": {}
  "/app/dashboard": {}
  "/app/events": {}
  "/app/export": {}
  "/app/members": {}
  "/app/reports": {}
  "/app/settings": {}
  "/Auth": {}
  "/auth/login": {}
  "/auth/logout": {}
  "/auth/signup": {}
  "/CellManagement": {}
  "/CellReports": {}
  "/ChurchManagement": {}
  "/ChurchManagementNew": {}
  "/cursos/CourseAdmin": {}
  "/cursos/Courses": {}
  "/cursos/CoursesAdmin": {}
  "/cursos/CoursesDiscipulador": {}
  "/cursos/CoursesLeader": {}
  "/Dashboard": {}
  "/DiscipuladorManagement": {}
  "/eventos/Events": {}
  "/eventos/EventsAdmin": {}
  "/eventos/EventsDiscipulador": {}
  "/eventos/EventsLeader": {}
  "/Index": {}
  "/LeaderManagement": {}
  "/marketing": {}
  "/NetworkReports": {}
  "/NotFound": {}
  "/onboarding": {}
  "/Profile": {}
  "/Settings": {}
  "/Statistics": {}
  "/StatisticsNew": {}
  "/test": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/app": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
